FROM php:7.1-apache

MAINTAINER Stephan Altmann <stephan@salty.rocks>

#create folder structure
RUN echo "Create folders"

RUN mkdir /var/www/drupal
RUN mkdir /var/log/apache-php

#set permissions
RUN echo "Set permissions"

RUN chown -R www-data:www-data /var/www
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_RUN_DIR /var/run/apache2

#add host config
RUN echo "Setting up apache vhosts"

ADD vhosts/000-default.conf /etc/apache2/sites-enabled/000-default.conf
ADD vhosts/drupal.conf /etc/apache2/sites-enabled/drupal.conf

#install tools & php extensions
RUN echo "Install tools and php extensions"

RUN docker-php-ext-install pdo_mysql 
RUN apt-get update && \
            apt-get install -y libfreetype6-dev libjpeg62-turbo-dev wget vim && \
            docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/  &&  \
            docker-php-ext-install gd && \
            docker-php-ext-install zip

RUN apt-get install -y --no-install-recommends git zip

#php-settings
RUN touch /usr/local/etc/php/conf.d/uploads.ini \
    && echo "upload_max_filesize = 10M;" >> /usr/local/etc/php/conf.d/uploads.ini
RUN touch /usr/local/etc/php/conf.d/uploads.ini \
    && echo "memory_limit = 1024M;" >> /usr/local/etc/php/conf.d/uploads.ini
RUN touch /usr/local/etc/php/conf.d/uploads.ini \
    && echo "max_execution_time = 300;" >> /usr/local/etc/php/conf.d/uploads.ini
RUN a2enmod rewrite

#xdebug
RUN yes | pecl install xdebug \
    && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_autostart=off" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_connect_back=1" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.idekey=phpstorm" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.remote_port=9000" >> /usr/local/etc/php/conf.d/xdebug.ini \

#composer
RUN echo "Install composer"
RUN curl --show-error https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

#Drush
RUN composer global require drush/drush:dev-master
RUN ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush
